print (meanv)
return (S,min(S))
}
values<-c(1:10000)
GetSamples(values,10)
length(meanVector)
meanVector<-c(1:1000)
length(meanVector)
rm(list=ls())
#read the data file
data <- read.csv('flag.data',header = FALSE)
#Add Columns Names
colnames(data)<- c("name", "landmass", "zone", "area", "population", "language", "religion",
"bars", "stripes", "colours", "red", "green", "blue", "gold", "white", "black",
"orange", "mainhue", "circles", "crosses", "saltires", "quarters", "sunstars",
"crescent", "triangle", "icon", "animate", "text", "topleft", "botright")
#Convert Numbers to Labels
#Convert Landmass
data$landmass <- factor(data$landmass,c(1:6),c("N.America", "S.America", "Europe", "Africa", "Asia", "Oceania"))
#Convert zone
data$zone <- factor(data$zone,c(1:4),c('NE','SE','SW','NW'))
#Concert Language
data$language<- factor(data$language,c(1:10),c('English', 'Spanish', 'French','German','Slavic',
'Other Indo-European', 'Chinese', 'Arabic',
'Japanese/Turkish/Finnish/Magyar', 'Others'))
#Convert Religion
data$religion = factor(data$religion,c(0:7),c('Catholic', 'Other Christian','Muslim','Buddhist',
'Hindu','Ethnic','Marxist','Others'))
GetSamples2<-function(X,n){
S <- sample(x =  X,size =  n,replace = TRUE)
return (S)
}
meanVector<-c(1:1000)
minVector<-c(1:1000)
values<-c(1:10000)
for (i in 1:1000)
{
currentSample = GetSamples2(values,10)
meanVector[i] = mean(currentSample)
minVector[i]=min(currentSample)
}
average.mean=sum(meanVector)/length(meanVector)
average.min=sum(minVector)/length(minVector)
?sd
sd(meanVector)
sd(minVector)
for (i in 1:1000)
{
#Get sample
#n = 1,10,100,1000,10000
currentSample = GetSamples2(values,1)
#calculate current min,mean
meanVector[i] = mean(currentSample)
minVector[i]=min(currentSample)
}
average.mean=sum(meanVector)/length(meanVector)
average.min=sum(minVector)/length(minVector)
sd(meanVector)
sd(minVector)
for (i in 1:1000)
{
#Get sample
#n = 1,10,100,1000,10000
currentSample = GetSamples2(values,100)
#calculate current min,mean
meanVector[i] = mean(currentSample)
minVector[i]=min(currentSample)
}
average.mean=sum(meanVector)/length(meanVector)
average.min=sum(minVector)/length(minVector)
sd(meanVector)
sd(minVector)
for (i in 1:1000)
{
#Get sample
#n = 1,10,100,1000,10000
currentSample = GetSamples2(values,1000)
#calculate current min,mean
meanVector[i] = mean(currentSample)
minVector[i]=min(currentSample)
}
average.mean=sum(meanVector)/length(meanVector)
average.min=sum(minVector)/length(minVector)
sd(meanVector)
sd(minVector)
for (i in 1:1000)
{
#Get sample
#n = 1,10,100,1000,10000
currentSample = GetSamples2(values,10000)
#calculate current min,mean
meanVector[i] = mean(currentSample)
minVector[i]=min(currentSample)
}
average.mean=sum(meanVector)/length(meanVector)
average.min=sum(minVector)/length(minVector)
sd(meanVector,na.rm = FALSE)
sd(meanVector,na.rm = TRUE)
for (i in 1:1000)
{
#Get sample
#n = 1,10,100,1000,10000
currentSample = GetSamples2(values,1000)
#calculate current min,mean
meanVector[i] = mean(currentSample)
minVector[i]=min(currentSample)
}
average.mean=sum(meanVector)/length(meanVector)
average.min=sum(minVector)/length(minVector)
sd(meanVector,na.rm = TRUE)
sd(minVector)
for (i in 1:1000)
{
#Get sample
#n = 1,10,100,1000,10000
currentSample = GetSamples2(values,10000)
#calculate current min,mean
meanVector[i] = mean(currentSample)
minVector[i]=min(currentSample)
}
average.mean=sum(meanVector)/length(meanVector)
average.min=sum(minVector)/length(minVector)
sd(meanVector,na.rm = TRUE)
sd(minVector)
average.mean=mean(meanVector)
average.min=mean(minVector)
sd(meanVector)
sd(minVector)
for (n in c(1,10,100,1000,10000))
n
for (n in c(1,10,100,1000,10000))
print (n)
av
rm(list=ls())
#read the data file
data <- read.csv('flag.data',header = FALSE)
#Add Columns Names
colnames(data)<- c("name", "landmass", "zone", "area", "population", "language", "religion",
"bars", "stripes", "colours", "red", "green", "blue", "gold", "white", "black",
"orange", "mainhue", "circles", "crosses", "saltires", "quarters", "sunstars",
"crescent", "triangle", "icon", "animate", "text", "topleft", "botright")
#Convert Numbers to Labels
#Convert Landmass
data$landmass <- factor(data$landmass,c(1:6),c("N.America", "S.America", "Europe", "Africa", "Asia", "Oceania"))
#Convert zone
data$zone <- factor(data$zone,c(1:4),c('NE','SE','SW','NW'))
#Concert Language
data$language<- factor(data$language,c(1:10),c('English', 'Spanish', 'French','German','Slavic',
'Other Indo-European', 'Chinese', 'Arabic',
'Japanese/Turkish/Finnish/Magyar', 'Others'))
#Convert Religion
data$religion = factor(data$religion,c(0:7),c('Catholic', 'Other Christian','Muslim','Buddhist',
'Hindu','Ethnic','Marxist','Others'))
#Second(b)
#write the function without printig not to spam
GetSamples2<-function(X,n){
S <- sample(x =  X,size =  n,replace = TRUE)
return (S)
}
#define value containers
meanVector<-c(1:1000)
minVector<-c(1:1000)
meav <- vector(mode="numeric", length=0)
miav <- vector(mode="numeric", length=0)
mesd <- vector(mode="numeric", length=0)
misd <- vector(mode="numeric", length=0)
for (n in c(1,10,100,1000,10000))
{
for (i in 1:1000)
{
#Get sample
#n = 1,10,100,1000,10000
currentSample = GetSamples2(values,n)
#calculate current min,mean
meanVector[i] = mean(currentSample)
minVector[i]=min(currentSample)
}
meav <- c(meav,mean(meanVector))
miav <- c(miav,mean(minVector))
mesd <- c(mesd,sd(meanVector))
misd <- c(misd,sd(minVector))
}
values<-c(1:10000)
for (n in c(1,10,100,1000,10000))
{
for (i in 1:1000)
{
#Get sample
#n = 1,10,100,1000,10000
currentSample = GetSamples2(values,n)
#calculate current min,mean
meanVector[i] = mean(currentSample)
minVector[i]=min(currentSample)
}
meav <- c(meav,mean(meanVector))
miav <- c(miav,mean(minVector))
mesd <- c(mesd,sd(meanVector))
misd <- c(misd,sd(minVector))
}
meav
miav
?plot
install.packages("Hmisc", dependencies=T)
install.packages("Hmisc", dependencies=T)
d = data.frame(
x  = c(1:5)
, y  = c(1.1, 1.5, 2.9, 3.8, 5.2)
, sd = c(0.2, 0.3, 0.2, 0.0, 0.4)
)
##install.packages("Hmisc", dependencies=T)
library("Hmisc")
library("Hmisc")
# add error bars (without adjusting yrange)
plot(d$x, d$y, type="n")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
d = data.frame(
x  = c(1,10,100,1000,10000)
, y  = meav
, sd = mesd
)
##install.packages("Hmisc", dependencies=T)
library("Hmisc")
# add error bars (without adjusting yrange)
plot(d$x, d$y, type="n")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(-10000,10000))
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,10000))
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(2000,8000))
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
d = data.frame(
x  = c(1,10,100,1000,10000)/10
, y  = meav/10
, sd = mesd/10
)
##install.packages("Hmisc", dependencies=T)
library("Hmisc")
# add error bars (without adjusting yrange)
plot(d$x, d$y, type="n",ylim=c(2000,8000))
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(200,800))
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
d = data.frame(
x  = c(1,10,100,1000,10000)
, y  = meav
, sd = mesd
)
##install.packages("Hmisc", dependencies=T)
library("Hmisc")
# add error bars (without adjusting yrange)
plot(d$x, d$y, type="n",ylim=c(200,800))
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,8000))
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,100),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",xlim = c(0,100),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,100),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,1000),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
d = data.frame(
x  = c(1,10,100,1000,10000)
, y  = meav
, sd = mesd
)
##install.packages("Hmisc", dependencies=T)
library("Hmisc")
# add error bars (without adjusting yrange)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,10000),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,1000),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,100),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,100),xlim = c(0,100),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,100),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(9000,10000),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
0
0
0
0
0
0
0
0
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,100),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,1000),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,10000),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,1000),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
d = data.frame(
x  = c(1,10,100,1000,10000)
, y  = miav
, sd = misd
)
##install.packages("Hmisc", dependencies=T)
library("Hmisc")
# add error bars (without adjusting yrange)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,1000),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,10000),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,1000),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
#First(a)
rm(list=ls())
#read the data file
data <- read.csv('flag.data',header = FALSE)
#Add Columns Names
colnames(data)<- c("name", "landmass", "zone", "area", "population", "language", "religion",
"bars", "stripes", "colours", "red", "green", "blue", "gold", "white", "black",
"orange", "mainhue", "circles", "crosses", "saltires", "quarters", "sunstars",
"crescent", "triangle", "icon", "animate", "text", "topleft", "botright")
#Convert Numbers to Labels
#Convert Landmass
data$landmass <- factor(data$landmass,c(1:6),c("N.America", "S.America", "Europe", "Africa", "Asia", "Oceania"))
#Convert zone
data$zone <- factor(data$zone,c(1:4),c('NE','SE','SW','NW'))
#Concert Language
data$language<- factor(data$language,c(1:10),c('English', 'Spanish', 'French','German','Slavic',
'Other Indo-European', 'Chinese', 'Arabic',
'Japanese/Turkish/Finnish/Magyar', 'Others'))
#Convert Religion
data$religion = factor(data$religion,c(0:7),c('Catholic', 'Other Christian','Muslim','Buddhist',
'Hindu','Ethnic','Marxist','Others'))
values<-c(1:10000)
#write the function without printig not to spam
GetSamples2<-function(X,n){
S <- sample(x =  X,size =  n,replace = FALSE)
return (S)
}
#define value containers
meanVector<-c(1:1000)
minVector<-c(1:1000)
meav <- vector(mode="numeric", length=0)
miav <- vector(mode="numeric", length=0)
mesd <- vector(mode="numeric", length=0)
misd <- vector(mode="numeric", length=0)
for (n in c(1,10,100,1000,10000))
{
for (i in 1:1000)
{
#Get sample
#n = 1,10,100,1000,10000
currentSample = GetSamples2(values,n)
#calculate current min,mean
meanVector[i] = mean(currentSample)
minVector[i]=min(currentSample)
}
meav <- c(meav,mean(meanVector))
miav <- c(miav,mean(minVector))
mesd <- c(mesd,sd(meanVector))
misd <- c(misd,sd(minVector))
}
#THIS CODE WHERE COPIED FROM THIS SOURCE :http://stackoverflow.com/questions/15063287/add-error-bars-to-show-standard-deviation-on-a-plot-in-r
#I CHANGED THE VALUES TO FIT WHATS REQUESTED IN THE QUESTION
#I CHANGED THE VALUES TO FIT WHATS REQUESTED IN THE QUESTION
#prepare data for (mean , min one of them each time )
d = data.frame(
x  = c(1,10,100,1000,10000)
, y  = meav
, sd = mesd
)
##install.packages("Hmisc", dependencies=T)
library("Hmisc")
# add error bars (without adjusting yrange)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,1000),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,10000),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
d = data.frame(
x  = c(1,10,100,1000,10000)
, y  = miav
, sd = misd
)
##install.packages("Hmisc", dependencies=T)
library("Hmisc")
# add error bars (without adjusting yrange)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,10000),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
plot(d$x, d$y, type="n",ylim=c(0,8000),xlim = c(0,1000),xlab = "Size",ylab = "Average")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
meav
mesd
miav
misd
#First(a)
rm(list=ls())
#read the data file
data <- read.csv('flag.data',header = FALSE)
#Add Columns Names
colnames(data)<- c("name", "landmass", "zone", "area", "population", "language", "religion",
"bars", "stripes", "colours", "red", "green", "blue", "gold", "white", "black",
"orange", "mainhue", "circles", "crosses", "saltires", "quarters", "sunstars",
"crescent", "triangle", "icon", "animate", "text", "topleft", "botright")
#Convert Numbers to Labels
#Convert Landmass
data$landmass <- factor(data$landmass,c(1:6),c("N.America", "S.America", "Europe", "Africa", "Asia", "Oceania"))
#Convert zone
data$zone <- factor(data$zone,c(1:4),c('NE','SE','SW','NW'))
#Concert Language
data$language<- factor(data$language,c(1:10),c('English', 'Spanish', 'French','German','Slavic',
'Other Indo-European', 'Chinese', 'Arabic',
'Japanese/Turkish/Finnish/Magyar', 'Others'))
#Convert Religion
data$religion = factor(data$religion,c(0:7),c('Catholic', 'Other Christian','Muslim','Buddhist',
'Hindu','Ethnic','Marxist','Others'))
#religion barplot
